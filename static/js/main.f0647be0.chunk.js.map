{"version":3,"sources":["Components/WeatherData.js","Components/WeatherForm.js","Components/UnitSelector.js","Components/Error.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["StyledWeatherData","styled","div","CityName","Icon","CurrentTemp","FeelsLikeTemp","Windspeed","Humidity","HighAndLow","PrimaryData","SecondaryData","WeatherData","props","metresPerSecond","_convertCelsiusToF","C","toFixed","currentTemp","unit","parseInt","data","main","temp","highInCelsius","temp_max","lowInCelsius","temp_min","high","low","iconId","weather","icon","iconURL","feelsLikeTemp","feels_like","humidity","windSpeed","wind","speed","data-testid","className","name","sys","country","src","alt","title","StyledForm","form","Input","WeatherForm","onSubmit","handleSubmit","data-test-id","placeholder","type","onChange","e","handleChange","onClick","StyledUnitSelector","UnitContainer","CelsiusIcon","span","color","FahrenheitIcon","UnitSelector","handleUnitChange","ErrorContainer","Error","error","App","useState","city","setCity","forecast","setForecast","setError","tempUnit","setTempUnit","getForecast","axios","get","apiKey","then","response","catch","message","alert","classes","event","preventDefault","target","value","rel","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.f0647be0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport styled from \"styled-components\";\n\nconst StyledWeatherData = styled.div`\n  width: 100%;\n  max-width: 400px;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 1fr auto;\n  font-size: 16px;\n  font-family: \"Lato\", sans-serif;\n  margin: 24px auto 0 auto;\n  text-align: center;\n`;\n\nconst CityName = styled.div`\n  font-family: \"Lato\", sans-serif;\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 12px;\n`;\n\nconst Icon = styled.div`\n  font-size: 16px;\n`;\n\nconst CurrentTemp = styled.div`\n  font-size: 36px;\n  margin-bottom: 12px;\n`;\n\nconst FeelsLikeTemp = styled.div`\n  font-size: 22px;\n  font-weight: 100;\n`;\n\nconst Windspeed = styled.div`\n  font-size: 16px;\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst Humidity = styled.div`\n  font-size: 16px;\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst HighAndLow = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-family: \"Lato\", sans-serif;\n  font-weight: 100;\n  margin-bottom: 12px;\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst PrimaryData = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SecondaryData = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst WeatherData = (props) => {\n  const _convertCelsiusToF = (C) => {\n    return (C * 1.8 + 32).toFixed();\n  };\n\n  const convertToKiloPerHour = (metresPerSecond) => {\n    return (metresPerSecond * 18) / 5;\n  };\n\n  const currentTemp =\n    props.unit === \"celsius\"\n      ? `${parseInt(props.data.main.temp).toFixed()} ºC`\n      : `${_convertCelsiusToF(props.data.main.temp)} °F`;\n\n  const highInCelsius = parseInt(props.data.main.temp_max).toFixed();\n  const lowInCelsius = parseInt(props.data.main.temp_min).toFixed();\n\n  const high =\n    props.unit === \"celsius\"\n      ? highInCelsius + \" ºC\"\n      : `${_convertCelsiusToF(props.data.main.temp_max)} °F`;\n\n  const low =\n    props.unit === \"celsius\"\n      ? lowInCelsius + \" ºC\"\n      : `${_convertCelsiusToF(props.data.main.temp_min)} °F`;\n\n  const iconId = props.data.weather[0].icon;\n  const iconURL = `http://openweathermap.org/img/wn/${iconId}@2x.png`;\n\n  const feelsLikeTemp =\n    props.unit === \"celsius\"\n      ? `${parseInt(props.data.main.feels_like).toFixed()} ºC`\n      : `${_convertCelsiusToF(props.data.main.feels_like)} °F`;\n\n  const humidity = `${parseInt(props.data.main.humidity).toFixed()} %`;\n\n  const windSpeed = `${convertToKiloPerHour(\n    props.data.wind.speed\n  ).toFixed()} km/h`;\n\n  return (\n    <StyledWeatherData data-testid=\"weather-data\" className=\"u-flex\">\n      <PrimaryData>\n        <CityName>\n          {props.data.name}, {props.data.sys.country}\n        </CityName>\n        <Icon>\n          <img src={iconURL} alt=\"icon\" />\n        </Icon>\n        <CurrentTemp>{currentTemp}</CurrentTemp>\n        <FeelsLikeTemp>Feels like: {feelsLikeTemp}</FeelsLikeTemp>\n      </PrimaryData>\n      <SecondaryData>\n        <HighAndLow>\n          <div>\n            <i className=\"fas fa-arrow-circle-up\"></i>\n            <span>{high}</span>\n          </div>\n          <div>\n            <i className=\"fas fa-arrow-circle-down\"></i>\n            <span>{low}</span>\n          </div>\n        </HighAndLow>\n        <Humidity title=\"humidity\">\n          <i className=\"fas fa-tint\"></i> {humidity}\n        </Humidity>\n        <Windspeed title=\"wind speed\">\n          <i className=\"fas fa-wind\"></i>\n          {windSpeed}\n        </Windspeed>\n      </SecondaryData>\n    </StyledWeatherData>\n  );\n};\n\nexport default WeatherData;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Input = styled.div`\n  padding: 6px 2px;\n  margin: 12px 0;\n  border-bottom: 2px solid black;\n  position: relative;\n  input {\n    border: none;\n    padding: 10px 2px;\n    width: 220px;\n  }\n  input:focus {\n    outline: 1px solid black;\n  }\n  i {\n    margin-left: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: absolute;\n    top: 12px;\n    right: 5px;\n  }\n`;\n\nexport default function WeatherForm(props) {\n  return (\n    <StyledForm onSubmit={props.handleSubmit} data-testid=\"weather-form\">\n      <Input data-test-id=\"weather-input\">\n        <input\n          placeholder=\"Location\"\n          type=\"text\"\n          onChange={(e) => props.handleChange(e)}\n        />\n        <i onClick={props.handleSubmit} className=\"fas fa-search\"></i>\n      </Input>\n    </StyledForm>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledUnitSelector = styled.div``;\n\nconst UnitContainer = styled.div`\n  padding: 8px 0;\n  display: block;\n  width: 100%;\n  text-align: center;\n`;\n\nconst CelsiusIcon = styled.span`\n  background-color: ${(props) => props.color};\n  padding: 8px 18px;\n  color: white;\n  font-size: 22px;\n  transition: all 0.3s;\n  border-radius: 10px;\n  i {\n    color: #1995ad;\n  }\n`;\n\nconst FahrenheitIcon = styled.span`\n  background-color: ${(props) => props.color};\n  padding: 8px 18px;\n  color: white;\n  font-size: 22px;\n  transition: all 0.2s;\n  border-radius: 10px;\n  i {\n    color: tomato;\n  }\n`;\n\nexport default function UnitSelector(props) {\n  return (\n    <StyledUnitSelector>\n      {/* <span>Show temperatures in</span> */}\n      <UnitContainer onClick={props.handleUnitChange}>\n        <CelsiusIcon\n          color={props.unit === \"celsius\" ? \"#1995AD\" : \"white\"}\n          className=\"celsius\"\n        >\n          {props.unit === \"fahrenheit\" ? (\n            <i className=\"fas fa-thermometer-half\"></i>\n          ) : (\n            <span>C</span>\n          )}\n        </CelsiusIcon>\n        <FahrenheitIcon\n          color={props.unit === \"fahrenheit\" ? \"tomato\" : \"white\"}\n          className=\"fahrenheit\"\n        >\n          {props.unit === \"celsius\" ? (\n            <i className=\"fas fa-thermometer-half\"></i>\n          ) : (\n            <span>F</span>\n          )}\n        </FahrenheitIcon>\n      </UnitContainer>\n    </StyledUnitSelector>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ErrorContainer = styled.div`\n  text-align: center;\n  font-size: 16px;\n`;\nexport default function Error(props) {\n  return (\n    <ErrorContainer>\n      {props.error ? <div>Error: {props.error}</div> : null}\n    </ErrorContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherData from \"./Components/WeatherData\";\nimport WeatherForm from \"./Components/WeatherForm\";\nimport UnitSelector from \"./Components/UnitSelector\";\nimport Error from \"./Components/Error\";\nimport { myKey as apiKey } from \"./keys.json\";\nimport \"./App.css\";\nimport * as classes from \"./App.module.css\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [forecast, setForecast] = useState({});\n  const [error, setError] = useState(\"\");\n  const [tempUnit, setTempUnit] = useState(\"celsius\");\n\n  const handleChange = (event) => {\n    let city = event.target.value;\n    setCity(city);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    getForecast();\n  };\n\n  const handleUnitChange = () => {\n    if (tempUnit === \"celsius\") {\n      setTempUnit(\"fahrenheit\");\n    } else {\n      setTempUnit(\"celsius\");\n    }\n  };\n\n  const getForecast = () => {\n    setError(\"\");\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`\n      )\n      .then((response) => {\n        setForecast(response.data);\n      })\n      .catch((error) => {\n        if (!error) {\n          alert(\"Something went wrong. Please try again.\");\n          return;\n        }\n        setError(error.response.data.message);\n        setForecast(\"\");\n      });\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.App}>\n        <h1 className=\"u-text-center\">My Generic Weather App</h1>\n        <div>\n          <UnitSelector\n            className={classes.unitSelector}\n            handleUnitChange={handleUnitChange}\n            unit={tempUnit}\n          />\n          <WeatherForm\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n          />\n        </div>\n        <div className=\"l-grid-align-self-start\">\n          {forecast.main ? (\n            <WeatherData className=\"mb-8\" data={forecast} unit={tempUnit} />\n          ) : null}\n          <Error error={error} />\n        </div>\n        <footer>\n          <div>\n            Made by{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/mo-mar\"\n            >\n              Mohamed Omar.{\" \"}\n            </a>\n            <br />\n            All data pulled from{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://openweathermap.org/\"\n            >\n              OpenWeatherMap.\n            </a>{\" \"}\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"wrapper\":\"App_wrapper__2Rh_f\"};"],"sourceRoot":""}